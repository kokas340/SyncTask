@using BlazorSyncTask.Services
@using System.Text.RegularExpressions
@inject IAuthService authService
@inject NavigationManager navMgr
@page "/Register"


<AuthorizeView>
    <NotAuthorized>
        <div class="row textbs" style="padding-top: 2rem; padding-bottom: 2rem; display: flex; flex-direction: revert;">
            <div class="offset-md-1 col-md-6">
                <h2>Wish to Sign-Up?</h2>
            </div>
            <div class="offset-md-3 col-md-2 logo">
                <p>synctask</p>
            </div>
            <div class="offset-md-1 col-md-6">
                <h5>Sign up and start your journey</h5>
            </div>
        </div>
        <div class="row">
            <div class="col-3">
            </div>
            <div class="col-3">
                <table class="mt-4" style="border-collapse: separate; border-spacing: 0 10px;">

                    <tr>
                        <td>
                            <label for="name" class="form-label">Name</label>
                        </td>
                        <td>
                            <input id="name" class="form-input w-100" @bind="@fullName" />
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <label for="username" class="form-label">Username</label>
                        </td>
                        <td>
                            <input id="username" class="form-input w-100" @bind="@userName" />
                        </td>
                    </tr>


                    <tr>
                        <td>
                            <label for="email" class="form-label">Email</label>
                        </td>
                        <td>
                            <input id="email" class="form-input w-100" @bind="@email"/>
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <label for="password" class="form-label">Password</label>
                        </td>
                        <td>
                            <input id="password" class="form-input w-100" type="password" @bind="@password" />
                        </td>
                    </tr>

                    <tr>
                        <td></td>
                        <td style="text-align: right;">
                            <button class="btn btn-primary btn-rounded" @onclick="OnRegisterClicked">Create Account</button>
                        </td>
                    </tr>
                </table>
            </div>
            <div class="col-3">
                <img src="reg.png" class="img-fluid animated" alt="Image description">
            </div>
            <div class="col-3">

            </div>
        </div>

        @if (!string.IsNullOrEmpty(errorLabel))
        {
            <div class="field">
                <label style="color: red">
                    @errorLabel
                </label>
            </div>
        }
        <div class="buttons" style="padding: 3rem 0 3rem 0">
            <div class="offset-md-10 col-md-2" style="padding-bottom: 2rem;">
                <div class="field">
                    <a class="loginbtn" @onclick="LoginAsync">Log in</a>
                </div>
            </div>
        </div>
    </NotAuthorized>
    <Authorized>
        <div class="card">
            <h3>Hello, @context.User.Identity.Name</h3>
        </div>
    </Authorized>
</AuthorizeView>

@code {
    private string fullName;
    private string userName;
    private string email;
    private string password;
    private string errorLabel;

    private async Task LoginAsync()
    {
        navMgr.NavigateTo("/login");
    }

    private async Task OnRegisterClicked()
    {
        if (string.IsNullOrWhiteSpace(fullName) ||
            string.IsNullOrWhiteSpace(userName) ||
            string.IsNullOrWhiteSpace(email) ||
            string.IsNullOrWhiteSpace(password))
        {
            errorLabel = "Please fill in all the fields.";
            return;
        }

        if (!Regex.IsMatch(email, @"^[^\s@]+@[^\s@]+\.[^\s@]+$"))
        {
            errorLabel = "Please enter a valid email address.";
            return;
        }

        errorLabel = "";
        try
        {
            await authService.RegisterAsync(fullName, userName, password, email);
            navMgr.NavigateTo("/login");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = $"Error: {e.Message}";
        }
    }

    
}
